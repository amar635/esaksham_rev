"""lrs lms tables

Revision ID: a213c4738933
Revises: 31672366557d
Create Date: 2025-09-13 13:01:40.723173

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a213c4738933'
down_revision = '31672366557d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activities',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('agents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mbox', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mbox')
    )
    op.create_table('statements',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('actor_mbox', sa.String(length=255), nullable=True),
    sa.Column('actor_name', sa.String(length=255), nullable=True),
    sa.Column('verb_id', sa.String(length=255), nullable=False),
    sa.Column('verb_display', sa.String(length=255), nullable=True),
    sa.Column('object_id', sa.String(length=255), nullable=False),
    sa.Column('object_definition', sa.Text(), nullable=True),
    sa.Column('result_completion', sa.Boolean(), nullable=True),
    sa.Column('result_success', sa.Boolean(), nullable=True),
    sa.Column('result_score_raw', sa.Float(), nullable=True),
    sa.Column('result_score_min', sa.Float(), nullable=True),
    sa.Column('result_score_max', sa.Float(), nullable=True),
    sa.Column('result_score_scaled', sa.Float(), nullable=True),
    sa.Column('context_instructor', sa.String(length=255), nullable=True),
    sa.Column('context_team', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('stored', sa.DateTime(), nullable=True),
    sa.Column('authority', sa.String(length=255), nullable=True),
    sa.Column('version', sa.String(length=10), nullable=True),
    sa.Column('voided', sa.Boolean(), nullable=True),
    sa.Column('raw_statement', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enrollments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('enrolled_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scorm_data',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('cmi_key', sa.String(), nullable=False),
    sa.Column('cmi_value', sa.Text(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'course_id', 'cmi_key', name='uq_user_course_cmi')
    )
    with op.batch_alter_table('scorm_data', schema=None) as batch_op:
        batch_op.create_index('idx_user_course', ['user_id', 'course_id'], unique=False)

    op.create_table('user_courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('certificate_issued', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('courses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('manifest_identifier', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('manifest_title', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('package_id', sa.String(), nullable=False))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.drop_column('title')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('courses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.drop_column('package_id')
        batch_op.drop_column('manifest_title')
        batch_op.drop_column('manifest_identifier')
        batch_op.drop_column('name')

    op.drop_table('user_courses')
    with op.batch_alter_table('scorm_data', schema=None) as batch_op:
        batch_op.drop_index('idx_user_course')

    op.drop_table('scorm_data')
    op.drop_table('enrollments')
    op.drop_table('statements')
    op.drop_table('agents')
    op.drop_table('activities')
    # ### end Alembic commands ###
